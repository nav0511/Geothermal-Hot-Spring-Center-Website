@page
@using GHCW_FE.DTOs
@using System.Text.Json
@using Microsoft.AspNetCore.Http
@removeTagHelper Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper, Microsoft.AspNetCore.Mvc.TagHelpers
@model GHCW_FE.Pages.Admin.CustomerManagementModel
@{
    ViewData["Title"] = "Quản lý khách hàng";
    Layout = "_LayoutManagement";
    ViewData["ActivePage"] = "/Admin/CustomerManagement";
    AccountDTO? account = null;
    if (HttpContext.Session.GetString("acc") != null)
    {
        account = JsonSerializer.Deserialize<AccountDTO>(HttpContext.Session.GetString("acc"));
    }
}

<header class="page-header" style="">
    <h2>Quản lý khách hàng</h2>
    <button class="btn-add" onclick="window.location.href='/Admin/AddCustomer'">+ Thêm khách hàng mới</button>
</header>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success mt-3">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger mt-3">
        @TempData["ErrorMessage"]
    </div>
}


<div class="search-container">
    <form method="get" id="filterForm">
        <input type="text" name="SearchTerm" placeholder="Tìm kiếm..." value="@Model.SearchTerm" />
        <button type="submit" class="btn-add">Tìm kiếm</button>

        <select name="SortOption" onchange="document.getElementById('filterForm').submit()">
            <option value="0" @(Model.SortOption == 0 ? "selected" : "")>Lọc theo</option>
            <option value="1" @(Model.SortOption == 1 ? "selected" : "")>Khách đã đăng ký tài khoản</option>
            <option value="2" @(Model.SortOption == 2 ? "selected" : "")>Khách chưa đăng ký tài khoản</option>
            <option value="3" @(Model.SortOption == 3 ? "selected" : "")>Khách nam</option>
            <option value="4" @(Model.SortOption == 4 ? "selected" : "")>Khách nữ</option>
            @if (account?.Role <= 1)
            {
                <option value="5" @(Model.SortOption == 5 ? "selected" : "")>Khách đăng ký nhận thông báo</option>
                <option value="6" @(Model.SortOption == 6 ? "selected" : "")>Khách không đăng ký nhận thông báo</option>
            }
        </select>

        <select name="OrderOption" onchange="document.getElementById('filterForm').submit()">
            <option value="1" @(Model.OrderOption == 1 ? "selected" : "")>ID Tăng dần</option>
            <option value="2" @(Model.OrderOption == 2 ? "selected" : "")>ID Giảm dần</option>
            <option value="3" @(Model.OrderOption == 3 ? "selected" : "")>Tên A-Z</option>
            <option value="4" @(Model.OrderOption == 4 ? "selected" : "")>Tên Z-A</option>
        </select>
    </form>
</div>

<div>
    @if (Model.Customers == null || Model.Customers.Count == 0)
    {
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger mt-3">
                @TempData["ErrorMessage"]
            </div>
        }
    }
    else
    {
        <table class="user-table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Họ và tên</th>
                    <th>Số điện thoại</th>
                    <th>Email</th>
                    <th>Nhận thông báo qua email</th>
                    @if (account?.Role <= 4)
                    {
                        <th>Tùy chọn</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var cus in Model.Customers)
                {
                    <tr>
                        <td>@cus.Id</td>
                        <td>@cus.FullName</td>
                        <td>@cus.PhoneNumber</td>
                        <td>@cus.Email</td>
                        <td>@(cus.IsEmailNotify == true ? "Có" : "Không")</td>
                        @if (account?.Role <= 4)
                        {
                            <td class="options-cell">
                                <button class=" btn-update" onclick="window.location.href='/Admin/CustomerDetails/?id=@cus.Id'">Chỉnh sửa</button>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

<div class="pagination">
    @if (Model.TotalPages > 1)
    {
        <div class="col-12">
            <nav aria-label="Page navigation">
                <ul class="pagination pagination-lg justify-content-center bg-white mb-0" style="padding: 30px;">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-SortOption="@Model.SortOption"
                               asp-route-OrderOption="@Model.OrderOption"
                               asp-route-SearchTerm="@Model.SearchTerm" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                                <span class="sr-only">Previous</span>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link">&laquo;</span>
                        </li>
                    }

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" asp-route-pageNumber="@i" asp-route-SortOption="@Model.SortOption"
                               asp-route-OrderOption="@Model.OrderOption"
                               asp-route-SearchTerm="@Model.SearchTerm">@i</a>
                        </li>
                    }

                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-SortOption="@Model.SortOption"
                               asp-route-OrderOption="@Model.OrderOption"
                               asp-route-SearchTerm="@Model.SearchTerm" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                                <span class="sr-only">Next</span>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link">&raquo;</span>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>


<script>
    // Get the profile icon and dropdown elements
    var profileIcon = document.getElementById("profileIcon");
    var dropdownMenu = document.getElementById("dropdownMenu");
    var profileMenu = document.querySelector(".profile-menu");

    // Toggle dropdown when the profile icon is clicked
    profileIcon.addEventListener("click", function (event) {
        event.stopPropagation();
        profileMenu.classList.toggle("show");
    });

    // Close the dropdown if user clicks outside
    window.addEventListener("click", function (event) {
        if (!event.target.matches('.profile-icon') && profileMenu.classList.contains('show')) {
            profileMenu.classList.remove('show');
        }
    });
</script>

<style>
    .btn-update, .btn-active, .btn-deactive {
        padding: 6px;
        font-size: 14px;
        font-weight: bold;
        border-radius: 5px;
        cursor: pointer;
        border: none;
        transition: background-color 0.3s ease;
    }

    .btn-update {
        background-color: #007bff;
        color: #ffffff;
    }

        .btn-update:hover {
            background-color: #0056b3;
        }

    .btn-active {
        background-color: #00b894;
        color: #ffffff;
    }

        .btn-active:hover {
            background-color: #029274;
        }

    .btn-deactive {
        background-color: #ff6b6b;
        color: #ffffff;
    }

        .btn-deactive:hover {
            background-color: #D65D5D;
        }

    .btn-add {
        background-color: #42C2A8;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 10px;
        cursor: pointer;
        font-size: 16px;
    }

        .btn-add:hover {
            background-color: #37a58d;
        }

    /* Search container */
    .search-container {
        display: inline;
        justify-content: space-between;
        margin-bottom: 20px;
    }

        .search-container input {
            padding: 10px;
            width: 60%;
            border: 1px solid #ccc;
            border-radius: 8px;
        }

        .search-container select {
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 8px; /* Rounded select */
        }

    /* User table */
    .user-table {
        width: 100%;
        font-size: 12px;
        border-collapse: collapse;
        margin-top: 20px;
        background-color: white;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

        .user-table th, .user-table td {
            padding: 10px;
            text-align: left;
        }

        .user-table th {
            background-color: #f1f1f1;
        }

        .user-table td {
            border-bottom: 1px solid #ddd;
        }

        .user-table .status {
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 14px;
            white-space: nowrap;
        }

        .user-table td.address-cell {
            max-width: 100px; /* Đặt giới hạn độ rộng */
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .user-table .options-cell {
            display: flex;
            gap: 5px; /* Khoảng cách giữa các nút */
        }

    .status.active {
        background-color: #00b894;
        color: white;
    }

    .status.inactive {
        background-color: #ff6b6b;
        color: white;
    }

    /* Pagination */
    .pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
        list-style-type: none;
    }

        .pagination a {
            padding: 10px 15px;
            margin: 0 5px;
            background-color: #e0f7fa;
            text-decoration: none;
            color: black;
            border-radius: 4px;
        }

            .pagination a.active {
                background-color: #00b894;
                color: white;
            }

            .pagination a:hover {
                background-color: #019875;
                color: white;
            }

        .pagination .page-item.disabled .page-link {
            background-color: #d3d3d3;
            color: #808080;
            pointer-events: none;
            padding: 10px 15px;
            margin: 0 5px;
            border-radius: 4px;
        }

        .pagination .page-item.active .page-link{
            background-color: #00b894;
            color: white;
        }        
</style>