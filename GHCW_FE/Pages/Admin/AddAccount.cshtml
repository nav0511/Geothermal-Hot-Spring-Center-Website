@page
@using GHCW_FE.DTOs
@using System.Text.Json
@using Microsoft.AspNetCore.Http
@model GHCW_FE.Pages.Admin.AddAccountModel
@{
    ViewData["Title"] = "Thêm tài khoản";
    Layout = "_LayoutManagement";
}

<header class="page-header">
    <h2><span style="color:#9197B3">Quản lý tài khoản > </span>Thêm tài khoản mới</h2>
</header>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success mt-3">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger mt-3">
        @TempData["ErrorMessage"]
    </div>
}
<div class="form-container">
    <form method="post" onsubmit="return validateForm()">
        <div class="form-group">
            <div>
                <label for="name">Họ và tên:</label>
                <input type="text" id="name" name="name" title="Vui lòng nhập họ tên không chứa số và kí tự đặc biệt" placeholder="Nhập họ tên" required/>
            </div>

            <div>
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" title="Vui lòng nhập đúng định dạng email" placeholder="Nhập email" required />
            </div>

            <div>
                <label for="gender">Giới tính:</label>
                <select id="gender" name="gender">
                    <option value="true">Nam</option>
                    <option value="false">Nữ</option>
                </select>
            </div>

            <div>
                <label for="dob">Ngày sinh:</label>
                <input type="date" id="dob" name="dob" />
            </div>

            <div>
                <label for="phonenumber">Số điện thoại:</label>
                <input type="text" id="phonenumber" name="phonenumber" placeholder="Nhập số điện thoại"
                       pattern="[0-9]{10}" maxlength="10" title="Số điện thoại phải gồm 10 chữ số" required />
            </div>

            <div>
                <label for="address">Địa chỉ:</label>
                <input type="text" id="address" name="address" />
            </div>

            <div>
                <label for="role">Vai trò:</label>
                <select id="role" name="role">
                    <option value="0">Quản trị viên</option>
                    <option value="1">Quản lý</option>
                    <option value="2">Marketing</option>
                    <option value="3">Sale</option>
                    <option value="4">Lễ tân</option>
                    <option value="5">Khách hàng</option>
                </select>
            </div>

            <div>
                <label for="password">Mật Khẩu</label>
                <div class="input-group" style="display:flex">
                    <input type="password" class="form-control" name="Password" id="password" placeholder="Nhập mật khẩu" required>
                    <div class="input-group-append">
                        <button type="button" class="btn btn-black" id="togglePassword" style="width:40px">
                            <i class="fa fa-eye" id="eyeIcon"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group checkbox-group">
            <div class="checkbox-item">
                <input type="checkbox" id="isActive" name="isActive" value="true" checked>
                <label for="isActive">Đang hoạt động</label>
            </div>
            <div class="checkbox-item">
                <input type="checkbox" id="isEmailNotify" name="isEmailNotify" value="true">
                <label for="isEmailNotify">Nhận thông báo qua Email</label>
            </div>
        </div>

        <div class="button-container">
            <button type="submit" class="btn-add">Thêm</button>
        </div>
    </form>
</div>

<div class="back-button-container">
    <button class="btn-back" onclick="window.location.href='/Admin/UserManagement'"> << Quay lại</button>
</div>

<script>
    // Get the profile icon and dropdown elements
    var profileIcon = document.getElementById("profileIcon");
    var dropdownMenu = document.getElementById("dropdownMenu");
    var profileMenu = document.querySelector(".profile-menu");

    // Toggle dropdown when the profile icon is clicked
    profileIcon.addEventListener("click", function (event) {
        event.stopPropagation();
        profileMenu.classList.toggle("show");
    });

    // Close the dropdown if user clicks outside
    window.addEventListener("click", function (event) {
        if (!event.target.matches('.profile-icon') && profileMenu.classList.contains('show')) {
            profileMenu.classList.remove('show');
        }
    });

    document.getElementById('togglePassword').addEventListener('click', function () {
        const passwordInput = document.getElementById('password');
        const eyeIcon = document.getElementById('eyeIcon');

        // Toggle the type attribute
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);

        // Toggle the eye icon
        eyeIcon.classList.toggle('fa-eye');
        eyeIcon.classList.toggle('fa-eye-slash');
    });

    function validatePassword() {
        const passwordInput = document.getElementById('password');
        const password = passwordInput.value.trim();

        const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@$#^!%*?&])[A-Za-z\d@@$#^!%*?&]{8,}$/;

        if (!passwordPattern.test(password)) {
            passwordInput.setCustomValidity("Mật khẩu phải dài ít nhất 8 kí tự, bao gồm ít nhất 1 kí tự thường, 1 kí tự hoa, 1 kí tự đặc biệt (@@$#^!%*?&) và 1 kí tự số.");
        } else {
            passwordInput.setCustomValidity(""); // Xóa thông báo lỗi nếu hợp lệ
        }
    }

    // Hàm kiểm tra số điện thoại
    function validatePhoneNumber() {
        const phoneInput = document.getElementById('phonenumber');
        const phoneNumber = phoneInput.value.trim();
        const phonePattern = /^(0[3,5,7,8,9])\d{8}$/;

        if (!phonePattern.test(phoneNumber)) {
            phoneInput.setCustomValidity("Số điện thoại phải gồm 10 chữ số và bắt đầu bằng 03, 05, 07, 08 hoặc 09.");
        } else {
            phoneInput.setCustomValidity(""); // Xóa thông báo lỗi nếu hợp lệ
        }
    }

    // Hàm kiểm tra email hợp lệ
    function validateEmail() {
        const emailInput = document.getElementById('email');
        const emailPattern = /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

        if (!emailPattern.test(emailInput.value.trim())) {
            emailInput.setCustomValidity("Vui lòng nhập đúng định dạng email.");
        } else {
            emailInput.setCustomValidity(""); // Xóa thông báo lỗi nếu hợp lệ
        }
    }

    // Hàm kiểm tra tên hợp lệ
    function validateName() {
        const nameInput = document.getElementById('name');
        const namePattern = /^[a-zA-ZÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠÝàáâãèéêìíòóôõùúăđĩũơưƯẠ-ỹ\s]+$/;

        if (!namePattern.test(nameInput.value.trim())) {
            nameInput.setCustomValidity("Vui lòng nhập tên không chứa chữ số và kí tự đặc biệt.");
        } else {
            nameInput.setCustomValidity(""); // Xóa thông báo lỗi nếu hợp lệ
        }
    }

    // Hàm tổng kiểm tra form
    function validateForm() {
        validatePhoneNumber();
        validateEmail();
        validatePassword();
        validateName();

        return true;
    }

    // Thêm sự kiện cho input để kiểm tra ngay khi người dùng nhập liệu
    document.getElementById('phonenumber').addEventListener('input', validatePhoneNumber);
    document.getElementById('email').addEventListener('input', validateEmail);
    document.getElementById('password').addEventListener('input', validatePassword);
    document.getElementById('name').addEventListener('input', validateName);
</script>

<style>
    .form-group .btn-black {
        background-color: black;
        color: white;
        border: none;
    }

        .form-group .btn-black:hover {
            background-color: #333;
            color: white;
        }

    .btn-update, .btn-back {
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
        border-radius: 5px;
        cursor: pointer;
        border: none;
        transition: background-color 0.3s ease;
    }

    .btn-update {
        background-color: #007bff;
        color: #ffffff;
    }

        .btn-update:hover {
            background-color: #0056b3;
        }

    .btn-back {
        background-color: #6c757d;
        color: #ffffff;
    }

        .btn-back:hover {
            background-color: #5a6268;
        }

    .button-container {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    .btn-add {
        background-color: #42C2A8;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 10px;
        cursor: pointer;
        font-size: 16px;
    }

        .btn-add:hover {
            background-color: #37a58d;
        }

    /* Form container */
    .form-container {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin: auto;
    }

    /* Sử dụng grid layout cho form */
    .form-group {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
        margin-bottom: 15px;
    }

        .form-group label {
            display: block;
            margin-bottom: 5px;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

            /* Custom input styling */
            .form-group input[type="text"],
            .form-group input[type="email"],
            .form-group input[type="password"],
            .form-group input[type="date"],
            .form-group select {
                width: 100%;
            }

        .form-group .full-width {
            grid-column: 1 / 3;
        }

        /* Button */
        .form-group button {
            width: 80%;
            padding: 10px;
            background-color: #42C2A8;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            grid-column: 1 / 3;
            margin: 0 auto;
        }

            .form-group button:hover {
                background-color: #37a58d;
            }

    .checkbox-group {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        gap: 42%;
        flex-wrap: nowrap;
    }

    .checkbox-item {
        display: flex;
        align-items: center;
        white-space: nowrap;
    }

        .checkbox-item label {
            margin-bottom: -1px;
            margin-left: 5px;
        }

    .back-button-container {
        display: flex;
        justify-content: flex-end;
        margin-top: 20px;
    }

    .btn-back {
        background-color: #42A5F5;
        color: white;
        padding: 8px 16px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-size: 14px;
    }

        .btn-back:hover {
            background-color: #1E88E5;
        }

</style>